{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMA+BeA,EA5BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAErB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAKhB,SACE,uBAAOO,KAAK,OAAOC,MAAQT,EAAaU,SAflB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCRdG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACfC,EADe,iDACkCC,UAAUH,GAD5C,+DAGEI,MAAMF,GAHR,cAGfG,EAHe,gBAIEA,EAASC,OAJX,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVjB,kBAcdM,GAdc,4CAAH,sDCYLO,EAVK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAE5B,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,EAAOI,UAAU,gBACrC,mBAAGA,UAAU,gBAAb,SAA8BJ,QCyBrBO,EA5BC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEjB,ECH0B,SAACA,GAC3B,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OAPAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAM,SAAAC,GAAI,OAAIH,EAAS,CACvCf,KAAMkB,EACNL,SAAS,SAEV,CAACpB,IAEGqB,EDV0BK,CAAa1B,GAAjCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACE,gCACE,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAGXH,GACE,qBAAKG,UAAU,YAAf,SAEIH,EAAOJ,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEOA,GADCA,EAAIC,aEIbgB,EApBM,WACnB,MAAoCzC,mBAAS,CAAC,eAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACE,qCACE,8CAEA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAGES,EAAWe,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAA0BA,SAAWA,GAAtBA,U,MCZzB4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.acbc3777.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if ( inputValue.trim().length > 2) {\r\n      setCategories(categories => [inputValue, ...categories]);\r\n      setInputValue(\"\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input type=\"text\" value={ inputValue } onChange={ handleInputChange } />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async ( category ) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=jo1nYb9k38OfP7IZYXjZ51K7hCCLMybA`;\r\n\r\n  const response = await fetch(url);\r\n  const { data } = await response.json();\r\n\r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    }\r\n  });\r\n\r\n  return gifs;\r\n}","import React from 'react';\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} className=\"card__image\" />\r\n      <p className=\"card__caption\">{title}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n  const { data:images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"animate__animated animate__fadeIn\">{ category }</h2>\r\n\r\n      { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n      {\r\n        images && (\r\n          <div className=\"main-grid\">\r\n            {\r\n              images.map(img => (\r\n                <GifGridItem\r\n                  key={ img.id }\r\n                  { ...img }\r\n                />\r\n              ))\r\n            }\r\n          </div>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  })\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then( imgs => setState({\r\n      data: imgs,\r\n      loading: false,\r\n    }) )\r\n  }, [category])\r\n\r\n  return state; // { data: [], loading: true };\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState(['Death Note']);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n\r\n      <AddCategory setCategories={ setCategories } />\r\n\r\n      <hr />\r\n\r\n      {\r\n        categories.map( category => (\r\n          <GifGrid key={ category } category={ category } />\r\n        ))\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}